version: '3'

services:
  db:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: postgres
      PGDATA: ./postgres_data
    volumes: 
      - db_data:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
      timeout: 45s
      interval: 10s
      retries: 10

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: postgres@postgres.pg
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - 8080:80
    restart: always

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    expose:
      - "2181"

  kafka:
    image: wurstmeister/kafka:2.12-2.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_MESSAGE_MAX_BYTES: 31457280
      KAFKA_MAX_MESSAGE_BYTES: 31457280
      KAFKA_REPLICA_FETCH_MAX_BYTES: 31457280
      KAFKA_MAX_REQUEST_SIZE: 31457280
      KAFKA_MAX_PARTITION_FETCH_BYTES: 31457280
      KAFKA_COMPRESSION_CODEC: 2
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://127.0.0.1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://kafka:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LOG_RETENTION_MS: 60000
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 5000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8081:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9093
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

  frontend: 
    build: 
      context: ./frontend
    ports: 
      - 80:80
      - 8554:8554
    expose: 
      - "80"

  backend: 
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    expose: 
      - "8000"
    depends_on:
      - frontend
      - db
      - kafka
    restart: always

volumes: 
  db_data: